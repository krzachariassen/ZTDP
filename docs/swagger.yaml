definitions:
  contracts.ApplicationContract:
    properties:
      metadata:
        $ref: '#/definitions/contracts.Metadata'
      spec:
        $ref: '#/definitions/contracts.ApplicationSpec'
    type: object
  contracts.ApplicationSpec:
    properties:
      description:
        type: string
      lifecycle:
        additionalProperties:
          $ref: '#/definitions/contracts.LifecycleDefinition'
        type: object
      tags:
        items:
          type: string
        type: array
    type: object
  contracts.EnvironmentContract:
    properties:
      metadata:
        $ref: '#/definitions/contracts.Metadata'
      spec:
        $ref: '#/definitions/contracts.EnvironmentSpec'
    type: object
  contracts.EnvironmentSpec:
    properties:
      description:
        type: string
    type: object
  contracts.LifecycleDefinition:
    properties:
      gates:
        items:
          type: string
        type: array
    type: object
  contracts.Metadata:
    properties:
      name:
        type: string
      owner:
        type: string
    type: object
  contracts.ServiceContract:
    properties:
      metadata:
        $ref: '#/definitions/contracts.Metadata'
      spec:
        $ref: '#/definitions/contracts.ServiceSpec'
    type: object
  contracts.ServiceSpec:
    properties:
      application:
        type: string
      port:
        type: integer
      public:
        type: boolean
    type: object
info:
  contact: {}
paths:
  /v1/applications:
    get:
      description: Returns all application resources
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/contracts.ApplicationContract'
            type: array
      summary: List all applications
      tags:
      - applications
    post:
      consumes:
      - application/json
      description: Creates a new application resource
      parameters:
      - description: Application payload
        in: body
        name: application
        required: true
        schema:
          $ref: '#/definitions/contracts.ApplicationContract'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/contracts.ApplicationContract'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Create a new application
      tags:
      - applications
  /v1/applications/{app_name}:
    get:
      description: Returns a specific application by name
      parameters:
      - description: Application name
        in: path
        name: app_name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/contracts.ApplicationContract'
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get an application
      tags:
      - applications
    put:
      consumes:
      - application/json
      description: Updates an existing application resource
      parameters:
      - description: Application name
        in: path
        name: app_name
        required: true
        type: string
      - description: Application payload
        in: body
        name: application
        required: true
        schema:
          $ref: '#/definitions/contracts.ApplicationContract'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/contracts.ApplicationContract'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Update an application
      tags:
      - applications
  /v1/applications/{app_name}/environments/{env_name}/allowed:
    post:
      description: Creates an 'allowed_in' policy edge from an application to an environment
      parameters:
      - description: Application name
        in: path
        name: app_name
        required: true
        type: string
      - description: Environment name
        in: path
        name: env_name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Add an allowed_in policy edge from an application to an environment
      tags:
      - environments
  /v1/applications/{app_name}/environments/allowed:
    get:
      description: Returns all environments the application is allowed to deploy to
        (policy)
      parameters:
      - description: Application name
        in: path
        name: app_name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/contracts.EnvironmentContract'
            type: array
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      summary: List allowed environments for an application
      tags:
      - environments
    post:
      consumes:
      - application/json
      description: Adds allowed_in policy edges for an application (does not remove
        existing)
      parameters:
      - description: Application name
        in: path
        name: app_name
        required: true
        type: string
      - description: List of environment names
        in: body
        name: envs
        required: true
        schema:
          items:
            type: string
          type: array
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Add allowed environments for an application
      tags:
      - environments
    put:
      consumes:
      - application/json
      description: Replaces the allowed_in policy edges for an application
      parameters:
      - description: Application name
        in: path
        name: app_name
        required: true
        type: string
      - description: List of environment names
        in: body
        name: envs
        required: true
        schema:
          items:
            type: string
          type: array
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Replace allowed environments for an application
      tags:
      - environments
  /v1/applications/{app_name}/services:
    get:
      description: Returns all services linked to an application
      parameters:
      - description: Application name
        in: path
        name: app_name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/contracts.ServiceContract'
            type: array
      summary: List all services for an application
      tags:
      - services
    post:
      consumes:
      - application/json
      description: Creates a new service resource linked to an application
      parameters:
      - description: Application name
        in: path
        name: app_name
        required: true
        type: string
      - description: Service payload
        in: body
        name: service
        required: true
        schema:
          $ref: '#/definitions/contracts.ServiceContract'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/contracts.ServiceContract'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Create a new service for an application
      tags:
      - services
  /v1/applications/{app_name}/services/{service_name}:
    get:
      description: Returns a specific service by name for an application
      parameters:
      - description: Application name
        in: path
        name: app_name
        required: true
        type: string
      - description: Service name
        in: path
        name: service_name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/contracts.ServiceContract'
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get a service for an application
      tags:
      - services
  /v1/applications/{app_name}/services/{service_name}/environments/{env_name}:
    post:
      description: Creates a 'deployed_in' edge from a service to an environment,
        ensuring the service belongs to the specified application
      parameters:
      - description: Application name
        in: path
        name: app_name
        required: true
        type: string
      - description: Service name
        in: path
        name: service_name
        required: true
        type: string
      - description: Environment name
        in: path
        name: env_name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Link a service to an environment
      tags:
      - environments
  /v1/applications/{app_name}/services/schema:
    get:
      description: Returns the JSON schema for the service contract
      parameters:
      - description: Application name
        in: path
        name: app_name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      summary: Get service contract schema
      tags:
      - services
  /v1/applications/schema:
    get:
      description: Returns example schema for application contract
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      summary: Get application contract schema
      tags:
      - applications
  /v1/apply:
    post:
      description: Applies the current dependency graph for the given environment
      produces:
      - application/json
      responses:
        "200":
          description: Graph applied
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Apply the dependency graph
      tags:
      - graph
  /v1/contracts/schema:
    get:
      description: Returns example schemas for supported contract kinds
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      summary: Get contract schemas
      tags:
      - contracts
  /v1/environments:
    get:
      description: Returns all environment nodes
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/contracts.EnvironmentContract'
            type: array
      summary: List all environments
      tags:
      - environments
    post:
      consumes:
      - application/json
      description: Creates a new environment node
      parameters:
      - description: Environment payload
        in: body
        name: environment
        required: true
        schema:
          $ref: '#/definitions/contracts.EnvironmentContract'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/contracts.EnvironmentContract'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Create a new environment
      tags:
      - environments
  /v1/graph:
    get:
      description: Loads the latest graph from the backend and returns it as JSON
      parameters:
      - description: Environment name (optional)
        in: query
        name: env
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get the current graph
      tags:
      - graph
  /v1/healthz:
    get:
      description: Returns 200 if the service is healthy
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            type: string
      summary: Health check
      tags:
      - health
  /v1/status:
    get:
      description: Returns high-level platform status and graph node count
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      summary: Get platform status
      tags:
      - status
swagger: "2.0"
